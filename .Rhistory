x + y
add2 <- function(x, y) {
add2(2,3)
x + y
}
add2 <- function(x, y) {
x + y
}
add2(2,3)
setwd("~/")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x <- 5 + 7
x
y <- x -3
y
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z,555,z)
c(z,555,z)
z * 2 + 100
my_sqrt = sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <-9
ls()
list.files()
?list.files
args(list.files)
list.files(old.dir)
old.dir <- list.files()
old.dir <- getwd()
mkdir(testdir)
mkdir
dir.create(testdir)
dir.create(/testdir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
list.files("mytest.R")
file.exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
dir.create("testdir.2")
dir.create("testdir.2/testdir.3", recursive = TRUE)
dir.create("testdir2/testdir3", recursive = TRUE)
file.remove("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
mysql <- seq(5,10,length=30)
my_sseq <- seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2),times=10)
rep(c(0,1,2), each = 10)
num_vec <- c(0.5,55, -10,6)
num_vec <- c(0.5,55,-10,6)
?c
num_vec <- c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Henrique")
my_nqme <- c(my_char, "Henrique")
my_nqme <- c(my_char, "Swirl")
my_name <- c(my_char, "Swirl")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep= "-")
set.seed(1)
rpois(5, 2)
?dnorm
?rnorm
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x <- rnorm(20)
x
x[1:10]
x <- rnorm(20)
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x(c(-2,-10))
x[c(-2,-10)]
x[c(-2,10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
swirl()
install.packages("swirl")
library("swirl")
rm(list=ls())
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
dim(my_matrix2) <- c(4,5)
matrix
matrix(nrow = 4, ncol = 5, 1:20)
my_mqtrix2 <- matrix(nrow = 4, ncol = 5, 1:20)
my_matrix2 <- matrix(nrow = 4, ncol = 5, 1:20)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
?colnames
colnames(my_data)
colnames(my_data) <- cnames
my_data
rm(list= ls())
?xyplot
library(nlme)
library(lattice)
?xyplot
require(stats)
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
par.strip.text = list(cex = 0.75),
aspect = "iso")
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
+        strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
+        par.strip.text = list(cex = 0.75),
+        aspect = "iso")
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(lat ~ long | Depth, data = quakes)
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
par.strip.text = list(cex = 0.75),
aspect = "iso")
?panel.abline
?axis
?points
?text
?points
?panel.abline
?axis
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?par
?trellis.par.set
?splom
?print.trellis
?par
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
install.packages("ggplot2")
library("ggplot2")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom_area
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
?text
?panel.abline
?splom
?trellis.par.set
rm(list =ls())
source('~/BigData/plot1.R')
source('~/BigData/plot1.R')
source('~/BigData/downloadData.R')
source('~/BigData/downloadData.R')
source('~/BigData/downloadData.R')
source('~/BigData/plot1.R')
setwd("~/BigData")
source('~/BigData/plot1.R')
source('~/.active-rstudio-document')
rm(list =ls())
source('~/.active-rstudio-document')
source('~/BigData/plot2.R')
source('~/BigData/plot2.R')
source('~/BigData/plot3.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list =ls())
source('~/.active-rstudio-document')
source('~/BigData/plot5.R')
rm(list =ls())
source('~/BigData/plot6.R')
source('~/.active-rstudio-document')
source('~/BigData/plot4.R')
source('~/.active-rstudio-document')
rm(list =ls())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
ACS$agricultureLogical <- ifelse(ACS$ACR==3 & ACS$AGS==6,TRUE,FALSE)
which(ACS$agricultureLogical)
source('~/BigData/GDw3q2.R')
source('~/BigData/GDw3q2.R')
source('~/BigData/GDw3q2.R')
install.packages("jpeg")
source('~/BigData/GDw3q2.R')
source('~/.active-rstudio-document')
quantile(picture, probs = c(0.3, 0.8) )
combined[with(combined, order(-V2) )]
source('~/BigData/GDw3q3.R')
source('~/.active-rstudio-document')
source('~/BigData/GDw3q3.R')
source('~/BigData/GDw3q3.R')
source('~/BigData/GDw3q3.R')
source('~/BigData/GDw3q3.R')
source('~/.active-rstudio-document')
source('~/BigData/GDw3q3.R')
combined[with(combined, order(-V2) )]
combined <- merge(gdp, fed, by.x="V1", by.y="CountryCode", sort=TRUE)
combined[with(combined, order(-V2) )]
combined
combined[with(combined, order(-V2) )]
mean(combined[combined$Income.Group=='High income: OECD',]$V2)
mean(combined[combined$Income.Group=="High income: nonOECD",]$V2)
quentile <- c(0.2,0.4,0.6,0.8,1)
q <- quantile(combined$V2, quentile)
q1 <- combined$V2 <= 38
xtabs(q1 ~ combined$Income.Group)
rm(list =ls())
source('~/BigData/GDw3q3.R')
arrange(matchedData, desc(Rank))[13, 3]
source('~/BigData/run_analysis.R')
setwd("~/Documents/Getting-and-Cleaning-Data")
setwd("~/Documents/Getting-and-Cleaning-Data")
file.exists
?file.exists
